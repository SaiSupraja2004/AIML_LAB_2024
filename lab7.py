# -*- coding: utf-8 -*-
"""lab7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e2fvsFwgyp4yLEPplnUDlaywfqbLUauB
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

from sklearn.datasets import load_breast_cancer

cancer = load_breast_cancer()

cancer.keys()

print(cancer['DESCR'])

cancer['feature_names']

df = pd.DataFrame(cancer['data'],columns=cancer['feature_names'])
df.info()

df.describe()

np.sum(pd.isnull(df).sum())

cancer['target']

df['Cancer'] = pd.DataFrame(cancer['target'])
df.head()

sns.set_style('whitegrid')
sns.countplot(x='Cancer',data=df,palette='RdBu_r')

l=list(df.columns[0:10])
for i in range(len(l)-1):
    sns.boxplot(x='Cancer',y=l[i],data=df,palette='winter')
plt.figure()

f,(ax1,ax2)=plt.subplots(1,2,sharey=True,figsize=(12,6))
ax1.scatter(df['mean area'],df['Cancer'])
ax1.set_title("Cancer cases as a function of mean area",fontsize=15)
ax2.scatter(df['mean smoothness'],df['Cancer'])
ax2.set_title("Cancer cases as a function of mean smoothness",fontsize=15)

df_feat=df.drop('Cancer',axis=1)
df_feat.head()

df_target = df['Cancer']
df_target.head()

from sklearn.model_selection import train_test_split

X_train, X_test,y_train, y_test = train_test_split(df_feat, df_target,test_size=0.30,random_state=101)

y_train.head()

from sklearn.svm import SVC

model = SVC()

model.fit(X_train,y_train)

"""Predictions and Evaluation"""

predictions = model.predict(X_test)

from sklearn.metrics import classification_report,confusion_matrix

print(confusion_matrix(y_test,predictions))

print(classification_report(y_test,predictions))

print("Misclassification error rate:",round(np.mean(predictions!=y_test)))

